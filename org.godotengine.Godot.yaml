app-id: org.godotengine.Godot
runtime: org.freedesktop.Sdk
runtime-version: '23.08'
default-branch: stable
sdk: org.freedesktop.Sdk
add-extensions:
  org.freedesktop.Sdk.Extension.openjdk17:
    directory: jdk
    version: '23.08'
    no-autodownload: false
    autodelete: false
command: godot

build-options:
  arch:
    x86_64:
      env:
        # Only enable link-time optimization when targeting x86_64
        # (causes issues on other architectures)
        SCONS_FLAGS_EXTRA: use_lto=yes

  env:
    # Will be appended to the version string displayed in the editor and command-line help
    BUILD_NAME: flathub

    # SCons flags common to all builds
    # Shouldn't be quoted when used as it's a single string, not an array
    SCONS_FLAGS: >
      platform=linuxbsd
      CCFLAGS=-I/app/include
      prefix=/app
      unix_global_settings_path=/app
      progress=no
      builtin_freetype=no
      builtin_libogg=no
      builtin_libpng=no
      builtin_libtheora=no
      builtin_libvorbis=no
      builtin_libwebp=no
      builtin_openssl=no
      builtin_libvpx=no
      builtin_zlib=no
      builtin_graphite=no
      builtin_harfbuzz=no
      udev=no
finish-args:
  - --share=ipc
  - --socket=x11
  - --share=network
  - --socket=pulseaudio
  - --filesystem=host
  - --filesystem=xdg-run/speech-dispatcher # For TTS via libspeechd
  - --device=all
  - --talk-name=org.freedesktop.Flatpak

modules:
  - shared-modules/glu/glu-9.json

  - name: jdk
    buildsystem: simple
    build-commands:
      - mkdir -p /app/jdk

  # This section is borrowed from: 
  # https://github.com/flathub/org.electronjs.Electron2.BaseApp/blob/c4635368f6c11ace8c1290525da4435d13d9173f/org.electronjs.Electron2.BaseApp.yml#L103
  # https://github.com/flathub/net.lutris.Lutris/blob/76e94a0b80ef3ebc1b9a6b61f47d736f5ddd772c/net.lutris.Lutris.yml#L495
  # https://gitlab.archlinux.org/archlinux/packaging/packages/speech-dispatcher/-/blob/414baaf78b5fe416df88a89ac18d2dd579a0c653/PKGBUILD
  - name: libspeechd
    config-opts:
      - --disable-static
      - --with-ibmtts=no
      - --with-kali=no
      - --with-baratinoo=no
      - --with-voxin=no
      - --without-flite
      - --disable-python
    no-make-install: true
    post-install:
      - cd ./src/api/c && make install
    cleanup:
      - '*.la'
      - '*.a'
      - /include

    sources:
      - type: archive
        url: https://github.com/brailcom/speechd/releases/download/0.11.5/speech-dispatcher-0.11.5.tar.gz
        sha512: d6d880bce0ae5bc2a5d519ef7740c689ae8b4b0bb658379762810e4beae3e465a429fbe19f7c490e89db0ea6a36aedd4b2287ac9251b90059b5c2cb3c0dd8a28
        x-checker-data:
          type: anitya
          project-id: 13411
          stable-only: true
          url-template: https://github.com/brailcom/speechd/releases/download/$version/speech-dispatcher-$version.tar.gz

    modules:
      # dotconf provides utility functions to parse config files. It's only linked with the speech-dispatcher server,
      # which we aren't building, but it needs to exist to get past the ./configure step anyway
      - name: dotconf
        sources:
          - type: archive
            url: https://github.com/williamh/dotconf/archive/refs/tags/v1.4.1.tar.gz
            sha512: a6cada8621295b268d4b4fd85bc0c207e78324c9e84754ead2fdf6c1598ec8bdf626f9c24e66063d921c95d73e83b50ab50416a9b4c9a7a631392552ec46f55a
            x-checker-data:
              type: anitya
              project-id: 13410
              url-template: https://github.com/williamh/dotconf/archive/refs/tags/v$version.tar.gz

          - type: script
            commands:
              - autoreconf -fiv
            dest-filename: autogen.sh
        cleanup:
          - '*'

  - name: scons
    buildsystem: simple
    cleanup: ['*']

    sources:
      - type: archive
        sha256: 6e928fc97984e719814270f6863f2183b3b72180b0162a5ed09db68c9994100c
        url: https://downloads.sourceforge.net/project/scons/scons/4.8.0/SCons-4.8.0.tar.gz
        x-checker-data:
          type: anitya
          project-id: 4770
          url-template: https://downloads.sourceforge.net/project/scons/scons/$version/SCons-$version.tar.gz

    build-commands:
      - pip3 install --no-index --no-build-isolation --prefix=/app .

  - name: godot-tools
    buildsystem: simple

    sources:
      - type: archive
        sha256: da14e36448f1efd2955fe85d7ededc9e6ac8c893f76723b4852e7587306c761d
        url: https://github.com/godotengine/godot/releases/download/4.2.2-stable/godot-4.2.2-stable.tar.xz
        x-checker-data:
          type: anitya
          project-id: 12162
          url-template: https://github.com/godotengine/godot/releases/download/$version/godot-$version.tar.xz

      - type: script
        dest-filename: godot.sh
        commands:
          - export APPDATA="$XDG_DATA_HOME"
          - if [ -f /app/jdk/enable.sh ]; then source /app/jdk/enable.sh; fi
          - /app/bin/godot-bin "$@"

      - type: file
        path: org.godotengine.Godot.appdata.xml

    build-commands:
      - python3 /app/bin/scons $SCONS_FLAGS $SCONS_FLAGS_EXTRA target=editor -j "$FLATPAK_BUILDER_N_JOBS"
      - install -D -m755 bin/godot.linuxbsd.editor.* /app/bin/godot-bin
      - install -D -m755 godot.sh /app/bin/godot
      - desktop-file-edit --set-icon=$FLATPAK_ID misc/dist/linux/$FLATPAK_ID.desktop
      - install -Dm644 misc/dist/linux/$FLATPAK_ID.desktop /app/share/applications/$FLATPAK_ID.desktop
      - install -Dm644 misc/dist/linux/$FLATPAK_ID.xml /app/share/mime/packages/$FLATPAK_ID.xml
      - install -Dm644 $FLATPAK_ID.appdata.xml /app/share/appdata/$FLATPAK_ID.appdata.xml
      - install -Dm644 icon.svg /app/share/icons/hicolor/scalable/apps/$FLATPAK_ID.svg
      - >
        for size in {32,64,128,256}; do
          rsvg-convert icon.svg -w "$size" -h "$size" -a -f png -o "$size.png";
          install -Dm644 "$size.png" "/app/share/icons/hicolor/${size}x${size}/apps/$FLATPAK_ID.png";
        done
